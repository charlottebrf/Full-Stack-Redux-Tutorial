let chai = require('chai');
let expect = chai.expect;
let immutable = require('immutable');
let List = immutable.List;
let Map = immutable.Map;

describe('immutability', () => {

    describe('a number', () => {
        function incremement(currentState) {
            return currentState + 1;
        }

        it('is immutable', () => {
            let state = 42;
            let nextState = incremement(state);

            expect(nextState).to.equal(43);
            expect(state).to.equal(42);
        });
    });


    describe('a tree', () => {
        function addMovie(currentState, movie) {
            return currentState.set(
                'movies',
                currentState.get('movies').push(movie));
        }

        it('is immutable', () => {
            let state = Map({
                movies: List.of('Trainspotting', '28 Days Later')
            });
            let nextState = addMovie(state, 'Sunshine');

            expect(nextState).to.equal(Map({
                movies: List.of(
                    'Trainspotting',
                    '28 Days Later',
                    'Sunshine'
                )
            }));

            expect(state).to.equal(Map({
                movies: List.of(
                    'Trainspotting',
                    '28 Days Later'
                )
            }));
            ;
        });
    });

});